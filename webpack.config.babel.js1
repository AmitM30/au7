const webpack = require('webpack');
const path = require('path');
const AureliaWebPackPlugin = require('aurelia-webpack-plugin');

const aurelia = require('@easy-webpack/config-aurelia');
const babel = require('@easy-webpack/config-babel');
// import { generateConfig, get, stripMetadata, EasyWebpackConfig } from '@easy-webpack/core'
const generateConfig = require('@easy-webpack/core').generateConfig;
const stripMetadata = require('@easy-webpack/core').stripMetadata;

const title     = 'Wadi.com';
const baseUrl   = '/';
const rootDir   = path.resolve();
const srcDir    = path.resolve('src/apps');

// Variables set by npm scripts in package.json
const isProduction = env.production === true
const platform = env.platform // 'default' by default

let config = generateConfig({
  

    entry: {
      main: [
        './src/apps/main.js'
      ]
    },
    output: {
      path: path.join(__dirname, 'www/dist'),
      publicPath: 'dist/',
      filename: 'bundle.js'
    },
    node: {
      dns: 'mock',
      net: 'mock'
    },
    module: {
      rules: [
        { test: /\.js$/, loader: 'babel-loader', exclude: /(node_modules|bower_components)/ },
        { test: /\.html$/, loader: 'html-loader' },
        { test: /\.css$/, use: [
            { loader: 'style-loader' },
            { loader: 'css-loader' }
          ]
        },
        { test: /\.(png|gif|jpg)$/, loader: 'url-loader', options: { limit: '25000' } },
        { test: /\.(ttf|eot|svg)$/, loader: 'file-loader' }
      ]
    },


    // plugins: [
    //   new AureliaWebPackPlugin(),
    //   new webpack.DefinePlugin({
    //     // Allows these constants to be accessed by the aurelia app
    //     PRODUCTION: JSON.stringify(isProduction),
    //     PLATFORM: JSON.stringify(platform)
    //   })
    // ],
    devServer: {
      port: 3000
    }
  },
  aurelia({ root: rootDir, src: srcDir, title: title, baseUrl: baseUrl }),
  babel({ options: { /* uses settings from .babelrc */ } }),
  globalRegenerator()
)

module.exports = stripMetadata(config)
